(python) yogesh_24901@L470:~/yspace/python$ python3
Python 3.8.5 (default, Jul 28 2020, 12:59:40) 
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np
>>> l1=[11,2,3,4]
>>> l1
[11, 2, 3, 4]
>>> ar1=np.array(l1)
>>> ar1
array([11,  2,  3,  4])
>>> type(ar1)
<class 'numpy.ndarray'>
>>> ar1
array([11,  2,  3,  4])
>>> print(ar1)
[11  2  3  4]
>>> ar1.shape
(4,)
>>> ar1.dtype
dtype('int64')
>>> ar1.ndim
1
>>> ar2=np.array([1,2.3],[4,5,6])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Field elements must be 2- or 3-tuples, got '4'
>>> ar2=np.array([[1,2.3],[4,5,6]])
<stdin>:1: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
>>> ar2
array([list([1, 2.3]), list([4, 5, 6])], dtype=object)
>>> ar2.ndim
>>> ar2
array([list([1, 2.3]), list([4, 5, 6])], dtype=object)
>>> ar2.ndim
1
>>> ar2=np.array([[1,2.3],[4,5,6]])
>>> ar2.ndim
1
>>> ar2
array([list([1, 2.3]), list([4, 5, 6])], dtype=object)
>>> ar2=np.array([[1,2,3],[4,5,6]])
>>> ar2.ndim
2
>>> ar2.shape
(2, 3)
>>> ar0=np.zeros(3)
>>> ar0
array([0., 0., 0.])
>>> ar0=np.ones(3)
>>> ar0
array([1., 1., 1.])
>>> np.identity(3)
array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]])
>>> ar2=np.array([[1,2,3],[4,5,6]])
>>> ar2.dtype
dtype('int64')
>>> ar2=np.array([[1,2,3],[4,5,6]],np.int64)
>>> ar2.dtype
dtype('int64')
>>> ar2=np.array([[1,2,3],[4,5,6]],dtype=np.int32)
>>> ar2.dtype
dtype('int32')
>>> ar1
array([11,  2,  3,  4])

--------
>>> l1=[1,2,3,4]
>>> import numpy as np
>>> a2=np.array([l1,l2,l3,l4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'l2' is not defined
>>> a2=np.array([l1,l1,l1,l1])
>>> ar2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ar2' is not defined
>>> a2
array([[1, 2, 3, 4],
       [1, 2, 3, 4],
       [1, 2, 3, 4],
       [1, 2, 3, 4]])
>>> a2[0]
array([1, 2, 3, 4])
>>> a2[0]+1
array([2, 3, 4, 5])
>>> for i in range(1,4):
... a2[i]+=i*4
  File "<stdin>", line 2
    a2[i]+=i*4
    ^
IndentationError: expected an indented block
>>>     a2[i]+=i*4
  File "<stdin>", line 1
    a2[i]+=i*4
    ^
IndentationError: unexpected indent
>>>  a2[i]+=i*4
  File "<stdin>", line 1
    a2[i]+=i*4
    ^
IndentationError: unexpected indent
>>> a2[i]+=i*4
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'i' is not defined
>>> for i in range(1,4):
...  a2[i]+=i*4
... 
>>> a2
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [13, 14, 15, 16]])
>>> a2[][0]
  File "<stdin>", line 1
    a2[][0]
       ^
SyntaxError: invalid syntax
>>> a2[0]
array([1, 2, 3, 4])
>>> a2[1][0]
5
>>> a2:[0]
>>> a2
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [13, 14, 15, 16]])
>>> a2[:,0]
array([ 1,  5,  9, 13])


>>> a2[:,1:-1]
array([[ 2,  3],
       [ 6,  7],
       [10, 11],
       [14, 15]])
>>> a2[:,1:2]
array([[ 2],
       [ 6],
       [10],
       [14]])
>>> a2[:,1:3]
array([[ 2,  3],
       [ 6,  7],
       [10, 11],
       [14, 15]])
>>> a2
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [13, 14, 15, 16]])
>>> a2[:,1:3]
array([[ 2,  3],
       [ 6,  7],
       [10, 11],
       [14, 15]])
>>> a2[:,1:-1]
array([[ 2,  3],
       [ 6,  7],
       [10, 11],
       [14, 15]])
>>> a2[:2,:2]
array([[1, 2],
       [5, 6]])
>>> a2.reshape(2,4,2)
array([[[ 1,  2],
        [ 3,  4],
        [ 5,  6],
        [ 7,  8]],

       [[ 9, 10],
        [11, 12],
        [13, 14],
        [15, 16]]])
>>> a2[0]
array([1, 2, 3, 4])
>>> a2.reshape(2,4,2)
array([[[ 1,  2],
        [ 3,  4],
        [ 5,  6],
        [ 7,  8]],

       [[ 9, 10],
        [11, 12],
        [13, 14],
        [15, 16]]])
>>> a2.reshape(2,4,2)[0]
array([[1, 2],
       [3, 4],
       [5, 6],
       [7, 8]])
>>> a2.reshape(2,4,2)[1]
array([[ 9, 10],
       [11, 12],
       [13, 14],
       [15, 16]])

       >>> a2.ravel()
array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16])
>>> a3=np.arange(1,7).reshape(2,3)
>>> a3
array([[1, 2, 3],
       [4, 5, 6]])
>>> a3.T
array([[1, 4],
       [2, 5],
       [3, 6]])
>>> a3'
  File "<stdin>", line 1
    a3'
      ^
SyntaxError: EOL while scanning string literal
>>> a3
array([[1, 2, 3],
       [4, 5, 6]])
>>> a3.swapaxes(0,1)
array([[1, 4],
       [2, 5],
       [3, 6]])
>>> np.add(a3,a3)
array([[ 2,  4,  6],
       [ 8, 10, 12]])
>>> a3
array([[1, 2, 3],
       [4, 5, 6]])
>>> a3.sum()
21
>>> a3.sum(axes=0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: _sum() got an unexpected keyword argument 'axes'
>>> a3.sum(axis=0)
array([5, 7, 9])
>>> a3.mean(axis=0)
array([2.5, 3.5, 4.5])
